OpenShadingLanguage 1.00
# Compiled by oslc 1.3.0
shader node_diffuse_bsdf
param	color	Color	0.80000001 0.80000001 0.80000001 		 %read{5,7} %write{2147483647,-1}
param	float	Roughness	0 		 %read{2,6} %write{2147483647,-1}
param	normal	Normal	0 0 0 		 %read{1,6} %write{0,0}
oparam	closure color	BSDF			 %read{2147483647,-1} %write{1,7}
global	normal	N	 %read{0,0} %write{2147483647,-1}
const	string	$const1	"diffuse"		 %read{1,4} %write{2147483647,-1}
const	float	$const2	0		 %read{2,2} %write{2147483647,-1}
temp	int	$tmp1	 %read{3,3} %write{2,2}
temp	closure color	$tmp2	 %read{5,5} %write{4,4}
temp	closure color	$tmp3	 %read{7,7} %write{6,6}
const	string	$const3	"oren_nayar"		 %read{6,6} %write{2147483647,-1}
code Normal
# intern/cycles/kernel/shaders/node_diffuse_bsdf.osl:24
# 	normal Normal = N,
	assign		Normal N 	%filename{"intern/cycles/kernel/shaders/node_diffuse_bsdf.osl"} %line{24} %argrw{"wr"}
code BSDF
# intern/cycles/kernel/shaders/node_diffuse_bsdf.osl:25
# 	output closure color BSDF = diffuse(Normal))
	closure		BSDF $const1 Normal 	%filename{"intern/cycles/kernel/shaders/node_diffuse_bsdf.osl"} %line{25} %argrw{"wrr"}
code ___main___
# intern/cycles/kernel/shaders/node_diffuse_bsdf.osl:27
# 	if (Roughness == 0.0)
	eq		$tmp1 Roughness $const2 	%filename{"intern/cycles/kernel/shaders/node_diffuse_bsdf.osl"} %line{27} %argrw{"wrr"}
	if		$tmp1 6 8 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_diffuse_bsdf.osl:28
# 		BSDF = Color * diffuse(Normal);
	closure		$tmp2 $const1 Normal 	%line{28} %argrw{"wrr"}
	mul		BSDF $tmp2 Color 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_diffuse_bsdf.osl:30
# 		BSDF = Color * oren_nayar(Normal, Roughness);
	closure		$tmp3 $const3 Normal Roughness 	%line{30} %argrw{"wrrr"}
	mul		BSDF $tmp3 Color 	%argrw{"wrr"}
	end
