OpenShadingLanguage 1.00
# Compiled by oslc 1.3.0
shader node_hsv
param	float	Hue	0.5 		 %read{47,47} %write{2147483647,-1}
param	float	Saturation	1 		 %read{54,54} %write{2147483647,-1}
param	float	Value	1 		 %read{57,57} %write{2147483647,-1}
param	float	Fac	0.5 		 %read{100,102} %write{2147483647,-1}
param	color	ColorIn	0 0 0 		 %read{1,101} %write{2147483647,-1}
oparam	color	ColorOut	0 0 0 		 %read{2147483647,-1} %write{103,103}
local	float	___596_cmax	 %read{11,31} %write{5,5}
local	float	___596_cmin	 %read{11,11} %write{10,10}
local	float	___596_h	 %read{41,45} %write{17,44}
local	float	___596_s	 %read{18,45} %write{15,16}
local	float	___596_v	 %read{45,45} %write{12,12}
local	float	___596_cdelta	 %read{15,23} %write{11,11}
local	color	___596_c	 %read{27,39} %write{23,23}
local	float	___601_i	 %read{71,94} %write{70,70}
local	float	___601_f	 %read{72,78} %write{71,71}
local	float	___601_p	 %read{84,97} %write{74,74}
local	float	___601_q	 %read{87,97} %write{77,77}
local	float	___601_t	 %read{84,96} %write{81,81}
local	float	___601_h	 %read{66,71} %write{60,69}
local	float	___601_s	 %read{63,79} %write{61,61}
local	float	___601_v	 %read{65,97} %write{62,62}
local	color	___601_rgb	 %read{98,98} %write{65,97}
local	color	Color	 %read{46,102} %write{45,98}
const	string	$const1	"rgb_to_hsv"		 %read{0,0} %write{2147483647,-1}
const	int	$const2	0		 %read{1,60} %write{2147483647,-1}
temp	float	$tmp1	 %read{5,5} %write{1,1}
temp	float	$tmp2	 %read{5,5} %write{4,4}
const	int	$const3	1		 %read{2,61} %write{2147483647,-1}
temp	float	$tmp3	 %read{4,4} %write{2,2}
const	int	$const4	2		 %read{3,62} %write{2147483647,-1}
temp	float	$tmp4	 %read{4,4} %write{3,3}
temp	float	$tmp5	 %read{10,10} %write{6,6}
temp	float	$tmp6	 %read{10,10} %write{9,9}
temp	float	$tmp7	 %read{9,9} %write{7,7}
temp	float	$tmp8	 %read{9,9} %write{8,8}
const	float	$const5	0		 %read{13,82} %write{2147483647,-1}
temp	int	$tmp9	 %read{14,14} %write{13,13}
temp	int	$tmp10	 %read{19,19} %write{18,18}
temp	color	$tmp11	 %read{22,22} %write{21,21}
temp	color	$tmp12	 %read{23,23} %write{22,22}
temp	float	$tmp13	 %read{25,25} %write{24,24}
temp	int	$tmp14	 %read{26,26} %write{25,25}
temp	float	$tmp15	 %read{29,29} %write{27,27}
temp	float	$tmp16	 %read{29,29} %write{28,28}
temp	float	$tmp17	 %read{31,31} %write{30,30}
temp	int	$tmp18	 %read{32,32} %write{31,31}
const	float	$const6	2		 %read{34,88} %write{2147483647,-1}
temp	float	$tmp19	 %read{34,34} %write{33,33}
temp	float	$tmp20	 %read{36,36} %write{34,34}
temp	float	$tmp21	 %read{36,36} %write{35,35}
const	float	$const7	4		 %read{38,94} %write{2147483647,-1}
temp	float	$tmp22	 %read{38,38} %write{37,37}
temp	float	$tmp23	 %read{40,40} %write{38,38}
temp	float	$tmp24	 %read{40,40} %write{39,39}
const	float	$const8	6		 %read{41,69} %write{2147483647,-1}
temp	int	$tmp25	 %read{43,43} %write{42,42}
const	float	$const9	1		 %read{44,100} %write{2147483647,-1}
temp	float	$tmp26	 %read{48,48} %write{46,46}
const	float	$const10	0.5		 %read{47,47} %write{2147483647,-1}
temp	float	$tmp27	 %read{48,48} %write{47,47}
temp	float	$tmp28	 %read{49,49} %write{48,48}
temp	float	$tmp29	 %read{52,52} %write{51,51}
temp	float	$tmp30	 %read{51,51} %write{50,50}
temp	float	$tmp31	 %read{54,54} %write{53,53}
temp	float	$tmp32	 %read{55,55} %write{54,54}
temp	float	$tmp33	 %read{57,57} %write{56,56}
temp	float	$tmp34	 %read{58,58} %write{57,57}
const	string	$const11	"hsv_to_rgb"		 %read{59,59} %write{2147483647,-1}
temp	int	$tmp35	 %read{64,64} %write{63,63}
temp	int	$tmp36	 %read{67,67} %write{66,66}
temp	float	$tmp37	 %read{74,74} %write{73,73}
temp	float	$tmp38	 %read{76,76} %write{75,75}
temp	float	$tmp39	 %read{77,77} %write{76,76}
temp	float	$tmp40	 %read{79,79} %write{78,78}
temp	float	$tmp41	 %read{80,80} %write{79,79}
temp	float	$tmp42	 %read{81,81} %write{80,80}
temp	int	$tmp43	 %read{83,83} %write{82,82}
temp	int	$tmp44	 %read{86,86} %write{85,85}
temp	int	$tmp45	 %read{89,89} %write{88,88}
const	float	$const12	3		 %read{91,91} %write{2147483647,-1}
temp	int	$tmp46	 %read{92,92} %write{91,91}
temp	int	$tmp47	 %read{95,95} %write{94,94}
const	string	$const13	"mix"		 %read{99,99} %write{2147483647,-1}
temp	float	$tmp48	 %read{101,101} %write{100,100}
temp	color	$tmp49	 %read{103,103} %write{101,101}
temp	color	$tmp50	 %read{103,103} %write{102,102}
code ___main___
# intern/cycles/kernel/shaders/node_hsv.osl:30
# 	color Color = rgb_to_hsv(ColorIn);
	functioncall	$const1 46 	%filename{"intern/cycles/kernel/shaders/node_hsv.osl"} %line{30} %argrw{"r"}
# intern/cycles/kernel/shaders/node_color.h:58
# {
	compref		$tmp1 ColorIn $const2 	%filename{"intern/cycles/kernel/shaders/node_color.h"} %line{58} %argrw{"wrr"}
	compref		$tmp3 ColorIn $const3 	%argrw{"wrr"}
	compref		$tmp4 ColorIn $const4 	%argrw{"wrr"}
	max		$tmp2 $tmp3 $tmp4 	%argrw{"wrr"}
	max		___596_cmax $tmp1 $tmp2 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_color.h:59
# 	if (c < 0.0031308)
	compref		$tmp5 ColorIn $const2 	%line{59} %argrw{"wrr"}
	compref		$tmp7 ColorIn $const3 	%argrw{"wrr"}
	compref		$tmp8 ColorIn $const4 	%argrw{"wrr"}
	min		$tmp6 $tmp7 $tmp8 	%argrw{"wrr"}
	min		___596_cmin $tmp5 $tmp6 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_color.h:60
# 		return (c < 0.0) ? 0.0 : c * 12.92;
	sub		___596_cdelta ___596_cmax ___596_cmin 	%line{60} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_color.h:62
# 		return 1.055 * pow(c, 1.0 / 2.4) - 0.055;
	assign		___596_v ___596_cmax 	%line{62} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_color.h:64
# 
	neq		$tmp9 ___596_cmax $const5 	%line{64} %argrw{"wrr"}
	if		$tmp9 16 18 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_color.h:65
# color color_srgb_to_scene_linear(color c)
	div		___596_s ___596_cdelta ___596_cmax 	%line{65} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_color.h:68
# 		color_srgb_to_scene_linear(c[0]),
	assign		___596_s $const5 	%line{68} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_color.h:69
# 		color_srgb_to_scene_linear(c[1]),
	assign		___596_h $const5 	%line{69} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_color.h:72
# 
	eq		$tmp10 ___596_s $const5 	%line{72} %argrw{"wrr"}
	if		$tmp10 21 45 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_color.h:73
# color color_scene_linear_to_srgb(color c)
	assign		___596_h $const5 	%line{73} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_color.h:76
# 		color_scene_linear_to_srgb(c[0]),
	color		$tmp11 ___596_cmax ___596_cmax ___596_cmax 	%line{76} %argrw{"wrrr"}
	sub		$tmp12 $tmp11 ColorIn 	%argrw{"wrr"}
	div		___596_c $tmp12 ___596_cdelta 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_color.h:78
# 		color_scene_linear_to_srgb(c[2]));
	compref		$tmp13 ColorIn $const2 	%line{78} %argrw{"wrr"}
	eq		$tmp14 $tmp13 ___596_cmax 	%argrw{"wrr"}
	if		$tmp14 30 41 	%argrw{"r"}
	compref		$tmp15 ___596_c $const4 	%argrw{"wrr"}
	compref		$tmp16 ___596_c $const3 	%argrw{"wrr"}
	sub		___596_h $tmp15 $tmp16 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_color.h:79
# }
	compref		$tmp17 ColorIn $const3 	%line{79} %argrw{"wrr"}
	eq		$tmp18 $tmp17 ___596_cmax 	%argrw{"wrr"}
	if		$tmp18 37 41 	%argrw{"r"}
	compref		$tmp19 ___596_c $const2 	%argrw{"wrr"}
	add		$tmp20 $const6 $tmp19 	%argrw{"wrr"}
	compref		$tmp21 ___596_c $const4 	%argrw{"wrr"}
	sub		___596_h $tmp20 $tmp21 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_color.h:80
# 
	compref		$tmp22 ___596_c $const3 	%line{80} %argrw{"wrr"}
	add		$tmp23 $const7 $tmp22 	%argrw{"wrr"}
	compref		$tmp24 ___596_c $const2 	%argrw{"wrr"}
	sub		___596_h $tmp23 $tmp24 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_color.h:82
# 
	div		___596_h ___596_h $const8 	%line{82} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_color.h:84
# {
	lt		$tmp25 ___596_h $const5 	%line{84} %argrw{"wrr"}
	if		$tmp25 45 45 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_color.h:85
# 	float cmax, cmin, h, s, v, cdelta;
	add		___596_h ___596_h $const9 	%line{85} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_color.h:88
# 	cmax = max(rgb[0], max(rgb[1], rgb[2]));
	color		Color ___596_h ___596_s ___596_v 	%line{88} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_hsv.osl:33
# 	Color[0] += Hue + 0.5;
	compref		$tmp26 Color $const2 	%filename{"intern/cycles/kernel/shaders/node_hsv.osl"} %line{33} %argrw{"wrr"}
	add		$tmp27 Hue $const10 	%argrw{"wrr"}
	add		$tmp28 $tmp26 $tmp27 	%argrw{"wrr"}
	compassign	Color $const2 $tmp28 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_hsv.osl:34
# 	Color[0] = fmod(Color[0], 1.0);
	compref		$tmp30 Color $const2 	%line{34} %argrw{"wrr"}
	fmod		$tmp29 $tmp30 $const9 	%argrw{"wrr"}
	compassign	Color $const2 $tmp29 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_hsv.osl:35
# 	Color[1] *= Saturation;
	compref		$tmp31 Color $const3 	%line{35} %argrw{"wrr"}
	mul		$tmp32 $tmp31 Saturation 	%argrw{"wrr"}
	compassign	Color $const3 $tmp32 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_hsv.osl:36
# 	Color[2] *= Value;
	compref		$tmp33 Color $const4 	%line{36} %argrw{"wrr"}
	mul		$tmp34 $tmp33 Value 	%argrw{"wrr"}
	compassign	Color $const4 $tmp34 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_hsv.osl:38
# 	Color = hsv_to_rgb(Color);
	functioncall	$const11 99 	%line{38} %argrw{"r"}
# intern/cycles/kernel/shaders/node_color.h:96
# 	cmax = max(rgb[0], max(rgb[1], rgb[2]));
	compref		___601_h Color $const2 	%filename{"intern/cycles/kernel/shaders/node_color.h"} %line{96} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_color.h:97
# 	cmin = min(rgb[0], min(rgb[1], rgb[2]));
	compref		___601_s Color $const3 	%line{97} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_color.h:98
# 	cdelta = cmax - cmin;
	compref		___601_v Color $const4 	%line{98} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_color.h:100
# 	v = cmax;
	eq		$tmp35 ___601_s $const5 	%line{100} %argrw{"wrr"}
	if		$tmp35 66 98 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_color.h:101
# 
	color		___601_rgb ___601_v ___601_v ___601_v 	%line{101} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_color.h:104
# 	}
	eq		$tmp36 ___601_h $const9 	%line{104} %argrw{"wrr"}
	if		$tmp36 69 69 	%argrw{"r"}
# intern/cycles/kernel/shaders/node_color.h:105
# 	else {
	assign		___601_h $const5 	%line{105} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_color.h:107
# 		h = 0.0;
	mul		___601_h ___601_h $const8 	%line{107} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_color.h:108
# 	}
	floor		___601_i ___601_h 	%line{108} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_color.h:109
# 
	sub		___601_f ___601_h ___601_i 	%line{109} %argrw{"wrr"}
# intern/cycles/kernel/shaders/node_color.h:110
# 	if (s == 0.0) {
	color		___601_rgb ___601_f ___601_f ___601_f 	%line{110} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_color.h:111
# 		h = 0.0;
	sub		$tmp37 $const9 ___601_s 	%line{111} %argrw{"wrr"}
	mul		___601_p ___601_v $tmp37 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_color.h:112
# 	}
	mul		$tmp38 ___601_s ___601_f 	%line{112} %argrw{"wrr"}
	sub		$tmp39 $const9 $tmp38 	%argrw{"wrr"}
	mul		___601_q ___601_v $tmp39 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_color.h:113
# 	else {
	sub		$tmp40 $const9 ___601_f 	%line{113} %argrw{"wrr"}
	mul		$tmp41 ___601_s $tmp40 	%argrw{"wrr"}
	sub		$tmp42 $const9 $tmp41 	%argrw{"wrr"}
	mul		___601_t ___601_v $tmp42 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_color.h:115
# 
	eq		$tmp43 ___601_i $const5 	%line{115} %argrw{"wrr"}
	if		$tmp43 85 98 	%argrw{"r"}
	color		___601_rgb ___601_v ___601_t ___601_p 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_color.h:116
# 		if (rgb[0] == cmax) h = c[2] - c[1];
	eq		$tmp44 ___601_i $const9 	%line{116} %argrw{"wrr"}
	if		$tmp44 88 98 	%argrw{"r"}
	color		___601_rgb ___601_q ___601_v ___601_p 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_color.h:117
# 		else if (rgb[1] == cmax) h = 2.0 + c[0] -  c[2];
	eq		$tmp45 ___601_i $const6 	%line{117} %argrw{"wrr"}
	if		$tmp45 91 98 	%argrw{"r"}
	color		___601_rgb ___601_p ___601_v ___601_t 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_color.h:118
# 		else h = 4.0 + c[1] - c[0];
	eq		$tmp46 ___601_i $const12 	%line{118} %argrw{"wrr"}
	if		$tmp46 94 98 	%argrw{"r"}
	color		___601_rgb ___601_p ___601_q ___601_v 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_color.h:119
# 
	eq		$tmp47 ___601_i $const7 	%line{119} %argrw{"wrr"}
	if		$tmp47 97 98 	%argrw{"r"}
	color		___601_rgb ___601_t ___601_p ___601_v 	%argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_color.h:120
# 		h /= 6.0;
	color		___601_rgb ___601_v ___601_p ___601_q 	%line{120} %argrw{"wrrr"}
# intern/cycles/kernel/shaders/node_color.h:123
# 			h += 1.0;
	assign		Color ___601_rgb 	%line{123} %argrw{"wr"}
# intern/cycles/kernel/shaders/node_hsv.osl:40
# 	ColorOut = mix(ColorIn, Color, Fac);
	functioncall	$const13 104 	%filename{"intern/cycles/kernel/shaders/node_hsv.osl"} %line{40} %argrw{"r"}
# intern/cycles/kernel/shaders/stdosl.h:150
# PERCOMP1 (logb)
	sub		$tmp48 $const9 Fac 	%filename{"intern/cycles/kernel/shaders/stdosl.h"} %line{150} %argrw{"wrr"}
	mul		$tmp49 ColorIn $tmp48 	%argrw{"wrr"}
	mul		$tmp50 Color Fac 	%argrw{"wrr"}
	add		ColorOut $tmp49 $tmp50 	%argrw{"wrr"}
	end
