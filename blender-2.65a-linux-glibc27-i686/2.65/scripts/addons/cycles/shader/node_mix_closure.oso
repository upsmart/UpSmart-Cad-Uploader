OpenShadingLanguage 1.00
# Compiled by oslc 1.3.0
shader node_mix_closure
param	float	Fac	0.5 		 %read{4,4} %write{2147483647,-1}
param	closure color	Closure1			 %read{7,7} %write{0,0}
param	closure color	Closure2			 %read{8,8} %write{1,1}
oparam	closure color	Closure			 %read{2147483647,-1} %write{2,9}
local	float	t	 %read{6,8} %write{5,5}
const	string	$const1	"background"		 %read{0,2} %write{2147483647,-1}
const	float	$const2	0		 %read{5,5} %write{2147483647,-1}
const	float	$const3	1		 %read{4,6} %write{2147483647,-1}
const	string	$const4	"clamp"		 %read{3,3} %write{2147483647,-1}
temp	float	$tmp1	 %read{5,5} %write{4,4}
temp	float	$tmp2	 %read{7,7} %write{6,6}
temp	closure color	$tmp3	 %read{9,9} %write{7,7}
temp	closure color	$tmp4	 %read{9,9} %write{8,8}
code Closure1
# intern/cycles/kernel/shaders/node_mix_closure.osl:23
# 	closure color Closure1 = background(),
	closure		Closure1 $const1 	%filename{"intern/cycles/kernel/shaders/node_mix_closure.osl"} %line{23} %argrw{"wr"}
code Closure2
# intern/cycles/kernel/shaders/node_mix_closure.osl:24
# 	closure color Closure2 = background(),
	closure		Closure2 $const1 	%filename{"intern/cycles/kernel/shaders/node_mix_closure.osl"} %line{24} %argrw{"wr"}
code Closure
# intern/cycles/kernel/shaders/node_mix_closure.osl:25
# 	output closure color Closure = background())
	closure		Closure $const1 	%filename{"intern/cycles/kernel/shaders/node_mix_closure.osl"} %line{25} %argrw{"wr"}
code ___main___
# intern/cycles/kernel/shaders/node_mix_closure.osl:27
# 	float t = clamp(Fac, 0.0, 1.0);
	functioncall	$const4 6 	%filename{"intern/cycles/kernel/shaders/node_mix_closure.osl"} %line{27} %argrw{"r"}
# intern/cycles/kernel/shaders/stdosl.h:142
# PERCOMP1 (abs)
	min		$tmp1 Fac $const3 	%filename{"intern/cycles/kernel/shaders/stdosl.h"} %line{142} %argrw{"wrr"}
	max		t $tmp1 $const2 	%argrw{"wrr"}
# intern/cycles/kernel/shaders/node_mix_closure.osl:28
# 	Closure = (1.0 - t) * Closure1 + t * Closure2;
	sub		$tmp2 $const3 t 	%filename{"intern/cycles/kernel/shaders/node_mix_closure.osl"} %line{28} %argrw{"wrr"}
	mul		$tmp3 Closure1 $tmp2 	%argrw{"wrr"}
	mul		$tmp4 Closure2 t 	%argrw{"wrr"}
	add		Closure $tmp3 $tmp4 	%argrw{"wrr"}
	end
