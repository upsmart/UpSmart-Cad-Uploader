OpenShadingLanguage 1.00
# Compiled by oslc 1.3.0
shader node_translucent_bsdf
param	color	Color	0.80000001 0.80000001 0.80000001 		 %read{3,3} %write{2147483647,-1}
param	normal	Normal	0 0 0 		 %read{1,2} %write{0,0}
oparam	closure color	BSDF			 %read{2147483647,-1} %write{1,3}
global	normal	N	 %read{0,0} %write{2147483647,-1}
const	string	$const1	"diffuse"		 %read{1,1} %write{2147483647,-1}
temp	closure color	$tmp1	 %read{3,3} %write{2,2}
const	string	$const2	"translucent"		 %read{2,2} %write{2147483647,-1}
code Normal
# intern/cycles/kernel/shaders/node_translucent_bsdf.osl:23
# 	normal Normal = N,
	assign		Normal N 	%filename{"intern/cycles/kernel/shaders/node_translucent_bsdf.osl"} %line{23} %argrw{"wr"}
code BSDF
# intern/cycles/kernel/shaders/node_translucent_bsdf.osl:24
# 	output closure color BSDF = diffuse(Normal))
	closure		BSDF $const1 Normal 	%filename{"intern/cycles/kernel/shaders/node_translucent_bsdf.osl"} %line{24} %argrw{"wrr"}
code ___main___
# intern/cycles/kernel/shaders/node_translucent_bsdf.osl:26
# 	BSDF = Color * translucent(Normal);
	closure		$tmp1 $const2 Normal 	%filename{"intern/cycles/kernel/shaders/node_translucent_bsdf.osl"} %line{26} %argrw{"wrr"}
	mul		BSDF $tmp1 Color 	%argrw{"wrr"}
	end
